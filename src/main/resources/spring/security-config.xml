<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
    <security:http use-expressions="true">
        <!--<security:http-basic />-->
        <security:form-login login-page="/mvc/robbie/login" always-use-default-target="true" default-target-url="/mvc/robbie/appointment/"
                             login-processing-url="/login" username-parameter="username" password-parameter="password"
                             authentication-failure-url="/mvc/robbie/login?error=true"/>
        <!--<security:custom-filter ref="customFormLoginFilter" position="FORM_LOGIN_FILTER"/>-->
        <!--<security:custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER"/>-->
        <security:intercept-url pattern="/mvc/robbie/services/*" access="principal == 'gwj42'"/>
        <!--<security:intercept-url pattern="/mvc/robbie/appointment/*" access="hasAuthority('ROLE_USER') or hasAnyAuthority('ROLE_ADMIN','ROLE_FOO') or (principal.role == 'ROLE_USER')"/>-->
        <security:intercept-url pattern="/mvc/robbie/appointment/*" access="isAuthenticated()"/>
        <!--<security:intercept-url pattern="/**" access="hasAnyAuthority('ROLE_ANONYMOUS', 'ROLE_USER', 'ROLE_FOO','ROLE_ADMIN')"/>-->
        <security:intercept-url pattern="/**" access="permitAll"/>
        <security:logout logout-url="/logout" logout-success-url="/mvc/robbie/login?logout=true"/>
        <security:remember-me key="springRocks" remember-me-parameter="springRocks" data-source-ref="dataSource" />
    </security:http>

    <bean id="customFormLoginFilter" class="com.robbie.security.filter.CustomAuthenticationFilter">
        <property name="filterProcessesUrl" value="/login"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="usernameParameter" value="username"/>
        <property name="passwordParameter" value="password"/>
        <property name="authenticationSuccessHandler">
            <bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <property name="defaultTargetUrl" value="/mvc/robbie/appointment/"/>
            </bean>
        </property>
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/mvc/robbie/login?error=true"/>
            </bean>
        </property>
    </bean>

    <bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/mvc/robbie/login"/>
    </bean>
<!--    <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:user-service>
                <security:user name="user" password="111" authorities="ROLE_USER"/>
                <security:user name="admin" password="222" authorities="ROLE_USER,ROLE_FOO"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->
<!--    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider ref="customAuthenticationProvider"/>
    </security:authentication-manager>-->
    <security:authentication-manager alias="authenticationManager">
        <security:ldap-authentication-provider server-ref="ldapServer" user-context-mapper-ref="contextMapper"
                                               user-search-filter="(uid={0})" group-search-base="ou=groups"
                                               group-role-attribute="cn" group-search-filter="uniqueMember={0}" role-prefix="ROLE_">
            <!--<security:password-compare />-->
        </security:ldap-authentication-provider>
        <!--<security:authentication-provider ref="rememberMeAuthenticationProvider"/>-->
    </security:authentication-manager>
    <security:ldap-server id="ldapServer" url="ldap://localhost:10389/dc=robbie,dc=com" manager-dn="uid=admin,ou=system"
                          manager-password="secret"/>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

    <!--Remember Me-->
    <!--<bean id="rememberMeFilter" class=
            "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager" />
        <constructor-arg name="rememberMeServices" ref="rememberMeServices"/>
    </bean>

    <bean id="rememberMeServices" class=
            "org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg name="key" value="springRocks" />
        <constructor-arg name="userDetailsService" ref="userService"/>
        <constructor-arg name="tokenRepository" ref="tokenRepository"/>
        <property name="parameter" value="springRocks"/>
        <property name="alwaysRemember" value="true"/>
        <property name="cookieName" value="springRocks"/>
        <property name="useSecureCookie" value="true"/>
        <property name="tokenValiditySeconds" value="86400"/>
    </bean>
    <bean id="tokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="createTableOnStartup" value="false"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="rememberMeAuthenticationProvider" class=
            "org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg name="key" value="springRocks"/>
    </bean>-->
</beans>